{"version":3,"sources":["components/DisplayResults.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayResults","props","state","originalResults","results","result","this","length","headingsList","listHeadings","property","push","unshift","map","item","className","onClick","sortBodies","type","id","search","String","Math","random","listResults","i","resultsList","property1","myResult","myResult2","Array","isArray","myResult1","property2","el","JSON","stringify","join","replaceAll","triggerWord","substr","trigger","myItem","mySortingOption","item1","item2","option","sortingOption","bodies1","bodies2","smallIndex","j","Object","keys","keys1","keys2","prop1","prop2","temp","setState","console","log","textArr","textRow","text","link","document","createElement","setAttribute","encodeURI","style","display","body","appendChild","click","removeChild","myProperty","query","getElementById","value","searchResultsList","includes","innerHTML","convertToText","makeHeadings","makeResults","Component","App","url","a","fetch","then","response","json","findResultsArray","catch","error","alert","myObject","bigObject","propCount","biggestArray1","thisArray1","myArray1","thisArray","biggestArray","select","execCommand","onLoad","getResults","href","cols","rows","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uSAmVeA,E,kDA/Ub,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,gBAAiB,EAAKF,MAAME,gBAC5BC,QAAS,EAAKH,MAAMG,SAJL,E,gDAUnB,WAAgB,IAAD,OACTC,EAASC,KAAKJ,MAAME,QACxB,GAAIC,EAAOE,OAAQ,CACjB,IAAIC,EAAe,GACfC,EAAe,GACnB,IAAK,IAAIC,KAAYL,EAAO,GAC1BG,EAAaG,KAAKD,GAgCpB,OA9BAF,EAAaI,QAAb,MACAH,EAAeD,EAAaK,KAAI,SAACC,GAAD,OAC9B,qBAAIC,UAAU,aAAd,UACE,sBAAKA,UAAU,kBAAf,UACE,4BAAID,IACJ,sBAAKC,UAAU,yBAAf,UACE,wBAAQC,QAAS,kBAAM,EAAKC,WAAWH,EAAM,aAA7C,SACE,mBAAGC,UAAU,wBAEf,wBAAQC,QAAS,kBAAM,EAAKC,WAAWH,EAAM,aAA7C,SACE,mBAAGC,UAAU,gCAInB,sBAAKA,UAAU,oBAAf,UACE,+BACE,uBAAOG,KAAK,OAAOH,UAAU,eAAeI,GAAIL,MAElD,wBAAQE,QAAS,kBAAM,EAAKI,OAAL,UAAeN,KAAtC,SACE,mBAAGC,UAAU,uBAGjB,qBAAKI,GAAIE,OAAOP,GAAQ,UApBMQ,KAAKC,cAuB1B,GACX,oBAAIR,UAAU,aAAd,SACE,mCAD8BO,KAAKC,UAIhC,6BAAKd,IAEZ,OACE,6BACE,kDAASa,KAAKC,WADPD,KAAKC,Y,yBASpB,WACE,IAAIlB,EAASC,KAAKJ,MAAME,QACpBoB,EAAc,GAClB,GAAInB,EAAQ,CACV,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAOE,OAAQkB,IAAK,CACtC,IAAIC,EAAc,GAElB,IAAK,IAAIC,KADTD,EAAYf,KAAK,6BAAyBc,EAAI,GAApBH,KAAKC,WACTlB,EAAOoB,GAAI,CAC/B,IAAIG,EAgCAC,EA/BJ,GAAIC,MAAMC,QAAQ1B,EAAOoB,GAAGE,IAAa,CACvC,IAAIK,EAAY,GAChB,IAAK,IAAIC,KAAa5B,EAAOoB,GAAGE,GAAY,CAC1C,IAAIO,EAAKC,KAAKC,UAAU/B,EAAOoB,GAAGE,GAAWM,IAC7CD,EAAUrB,KAAKuB,GAEjBN,EAAWI,EACRK,KADQ,MAERC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,MAChBA,WAAW,IAAK,UACd,IACmC,IAAxCR,MAAMC,QAAQ1B,EAAOoB,GAAGE,KACC,OAAzBtB,EAAOoB,GAAGE,IACe,KAAzBtB,EAAOoB,GAAGE,GACV,CAEAC,EADgBP,OAAOc,KAAKC,UAAU/B,EAAOoB,GAAGE,KAE7CW,WAAW,IAAK,KAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,SAEM,OAAzBjC,EAAOoB,GAAGE,IACe,cAAzBtB,EAAOoB,GAAGE,IACe,KAAzBtB,EAAOoB,GAAGE,KAEVC,EAAW,OAIb,GAFUA,EAASrB,OAET,GAAI,CACZ,IAAIgC,EAAcX,EAASY,OAAO,EAAG,IAAM,MAC3CX,EACE,eAAC,IAAD,CAAad,UAAU,cAAc0B,QAASF,EAA9C,cACIX,UAINC,EAAYD,EAGdF,EAAYf,KAAK,6BAAyBkB,GAAhBP,KAAKC,WAEjCC,EAAYb,KAAK,6BAAyBe,GAAhBJ,KAAKC,WAEjC,OAAO,uBAAOR,UAAU,gBAAjB,SAAkCS,IAEzC,OACE,gCACE,6BACE,kDAASF,KAAKC,WADPD,KAAKC,c,wBAStB,SAAWmB,EAAQC,GAOjB,IAPmC,IAK/BC,EACAC,EAN8B,OAC9BC,EAASJ,EACTK,EAAgBJ,EAChBK,EAAU1C,KAAKJ,MAAME,QACrB6C,EAAUD,EAGLvB,EAAI,EAAGA,EAAIuB,EAAQzC,OAAQkB,IAAK,CAEvC,IADA,IAAIyB,EAAazB,EACR0B,EAAI1B,EAAI,EAAG0B,EAAIH,EAAQzC,OAAQ4C,IAAK,CAC3C,GAAmC,MAA/BF,EAAQC,GAAYJ,IAAyC,MAAtBG,EAAQE,GAAGL,GACpDF,EAAQ,IACRC,EAAQ,SACH,GACkC,kBAAhCI,EAAQC,GAAYJ,IAC3BG,EAAQC,GAAYJ,GAAQvC,OAAS,GAErCqC,EAAQK,EAAQC,GAAYJ,GAC5BD,EAAQI,EAAQE,GAAGL,QACd,GACLM,OAAOC,KAAKJ,EAAQC,GAAYJ,IAASvC,OAAS,GAClD6C,OAAOC,KAAKJ,EAAQE,GAAGL,IAASvC,OAAS,EACzC,CACA,IAAI+C,EAAQ,GACRC,EAAQ,GACZ,IAAK,IAAIC,KAASP,EAAQC,GAAYJ,GACpCQ,EAAM3C,KAAKsC,EAAQC,GAAYJ,GAAQU,IAEzC,IAAK,IAAIC,KAASR,EAAQE,GAAGL,GAC3BS,EAAM5C,KAAKsC,EAAQE,GAAGL,GAAQW,IAEhCb,EAAQU,EAAMjB,OACdQ,EAAQU,EAAMlB,YAEdO,EAAQK,EAAQC,GAAYJ,GAC5BD,EAAQI,EAAQE,GAAGL,GAGC,aAAlBC,GACEF,EAAQD,IACVM,EAAaC,GAGK,aAAlBJ,GACEF,EAAQD,IACVM,EAAaC,GAInB,IAAIO,EAAOT,EAAQxB,GACnBwB,EAAQxB,GAAKwB,EAAQC,GACrBD,EAAQC,GAAcQ,EAExBpD,KAAKqD,SAAS,CAAEvD,QAAS6C,IAAW,kBAAMW,QAAQC,IAAI,EAAK3D,MAAME,c,2BAInE,SAAc0C,GACZ,IAAIzC,EAASC,KAAKJ,MAAME,QACpB0D,EAAU,GACd,IAAK,IAAIpD,KAAYL,EAAO,GAC1ByD,EAAQnD,KAAKD,GAEf,IAAK,IAAIe,EAAI,EAAGA,EAAIpB,EAAOE,OAAQkB,IAAK,CACtC,IAAIsC,EAAU,GACd,IAAK,IAAIpC,KAAatB,EAAOoB,GAAI,CAC/B,IAAIG,EAAW,GACf,GAAIE,MAAMC,QAAQ1B,EAAOoB,GAAGE,IAAa,CACvC,IAAIK,EAAY,GAChB,IAAK,IAAIC,KAAa5B,EAAOoB,GAAGE,GAAY,CAC1C,IAAIO,EAAKC,KAAKC,UAAU/B,EAAOoB,GAAGE,GAAWM,IAC7CD,EAAUrB,KAAKuB,GAEjBN,EAAWI,EACRK,KADQ,MAERC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,MAChBA,WAAW,IAAK,UACd,IACmC,IAAxCR,MAAMC,QAAQ1B,EAAOoB,GAAGE,KACC,OAAzBtB,EAAOoB,GAAGE,IACe,KAAzBtB,EAAOoB,GAAGE,GACV,CAEAC,EADgBP,OAAOc,KAAKC,UAAU/B,EAAOoB,GAAGE,KAE7CW,WAAW,IAAK,KAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,SAEM,OAAzBjC,EAAOoB,GAAGE,IACe,cAAzBtB,EAAOoB,GAAGE,IACe,KAAzBtB,EAAOoB,GAAGE,KAEVC,EAAW,OAEbmC,EAAQpD,KAAKiB,GAEfkC,EAAQnD,KAAKoD,EAAQ1B,KAAK,MAE5B,IAAI2B,EAAOF,EAAQzB,KAAK,MACpB4B,EAAOC,SAASC,cAAc,KACnB,QAAXrB,GACFmB,EAAKG,aACH,OACA,+BAAiCC,UAAUL,IAE7CC,EAAKG,aAAa,WAAY,kBAE9BH,EAAKG,aACH,OACA,iCAAmCC,UAAUL,IAE/CC,EAAKG,aAAa,WAAY,kBAEhCH,EAAKK,MAAMC,QAAU,OACrBL,SAASM,KAAKC,YAAYR,GAC1BA,EAAKS,QACLR,SAASM,KAAKG,YAAYV,K,oBAI5B,SAAOW,GAKL,IALkB,IAAD,OACblE,EAAWkE,EACXC,EAAQX,SAASY,eAAepE,GAAUqE,MAC1C/B,EAAU1C,KAAKJ,MAAMC,gBACrB6E,EAAoB,GACfvD,EAAI,EAAGA,EAAIuB,EAAQzC,OAAQkB,IAAK,CACvC,GAAIuB,EAAQvB,GAAGf,GAAW,CACxB,IAAIkB,EAAW,GACf,GAAIE,MAAMC,QAAQiB,EAAQvB,GAAGf,IAAY,CACvC,IAAIsB,EAAY,GAChB,IAAK,IAAIC,KAAae,EAAQvB,GAAGf,GAAW,CAC1C,IAAIwB,EAAKC,KAAKC,UAAUY,EAAQvB,GAAGf,GAAUuB,IAC7CD,EAAUrB,KAAKuB,GAEjBN,EAAWI,EACRK,KADQ,MAERC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,MAChBA,WAAW,IAAK,UACd,IACmC,IAAxCR,MAAMC,QAAQiB,EAAQvB,GAAGf,KACA,OAAzBsC,EAAQvB,GAAGf,IACc,KAAzBsC,EAAQvB,GAAGf,GACX,CAEAkB,EADgBP,OAAOc,KAAKC,UAAUY,EAAQvB,GAAGf,KAE9C4B,WAAW,IAAK,KAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,SAEM,OAAzBU,EAAQvB,GAAGf,IACc,cAAzBsC,EAAQvB,GAAGf,IACc,KAAzBsC,EAAQvB,GAAGf,KAEXkB,EAAW,QAEToB,EAAQvB,GAAGf,KAAcmE,GAASjD,EAASqD,SAASJ,KACtDG,EAAkBrE,KAAKqC,EAAQvB,IAG/BuD,EAAkBzE,OAAS,EAC7BD,KAAKqD,SAAS,CAAEvD,QAAS4E,IAAqB,kBAC5CpB,QAAQC,IAAI,EAAK3D,MAAME,YAGzB8D,SAASY,eAAT,UACKpE,EAAW,QACdwE,UAFF,2D,oBAON,WAAU,IAAD,OACP,OACE,sBAAKnE,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0DACA,yBACEA,UAAU,aACVC,QAAS,kBAAM,EAAKmE,cAAc,QAFpC,UAIE,mBAAGpE,UAAU,yBAJf,cAIsD,OAEtD,yBACEA,UAAU,cACVC,QAAS,kBAAM,EAAKmE,cAAc,SAFpC,UAIE,mBAAGpE,UAAU,yBAJf,qBAI6D,UAG/D,uBACA,qBAAKA,UAAU,gBAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,uBAAOA,UAAU,gBAAjB,SAAkCT,KAAK8E,iBACtC9E,KAAK+E,0B,GAzUWC,aCkUdC,E,kDAhUb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXE,QAAS,MAHM,E,qFAWnB,WAAiBoF,GAAjB,oBAAAC,EAAA,6DACEnF,KAAKqD,SAAS,CAAEvD,QAAS,OAAQ,kBAC/BwD,QAAQC,IAAI,mBAAqB,EAAK3D,MAAME,YAFhD,SAIQsF,MAAMF,GACTG,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACtF,GACL,IAAIuB,EAAW,EAAKkE,iBAAiBzF,GACrC,EAAKsD,SAAS,CAAEvD,QAASwB,IAAY,kBACnCgC,QAAQC,IAAI,EAAK3D,MAAME,eAG1B2F,OAAM,SAACC,GACNpC,QAAQC,IAAI,UAAYmC,GACxBC,MACE,qGAEF,EAAKtC,SAAS,CAAEvD,QAAS,OAAQ,kBAC/BwD,QAAQC,IAAI,mBAAqB,EAAK3D,MAAME,eApBpD,gD,qFA4BA,SAAiB8F,GACf,IAAIC,EAAYD,EAGhB,IAAiC,IAA7BpE,MAAMC,QAAQoE,GAChB,OAAOA,EAGJ,GAAyB,kBAAdA,EAAwB,CAMtC,IAAIC,EAAY,EAChB,IAAK,IAAI1F,KAAYyF,EACnBC,IAEF,IACIC,EAAgB,GACpB,IAAK,IAAI1E,KAAawE,EAAW,CAC/B,IAAIG,EAAa,IAC2B,IAAxCxE,MAAMC,QAAQoE,EAAUxE,MAC1B2E,EAAaH,EAAUxE,IACRpB,OAAS8F,EAAc9F,SACpC8F,EAAgBC,GAKtB,GAAIF,EADiBC,EAAc9F,OACC,CAClC,IAAIgG,EAAW,GAEf,OADAA,EAAS,GAAKJ,EACPI,EAEP,IAAIC,EAAY,GACZC,EAAe,GAEnB,IAAK,IAAIxE,KAAakE,GACwB,IAAxCrE,MAAMC,QAAQoE,EAAUlE,MAC1BuE,EAAYL,EAAUlE,IACR1B,OAASkG,EAAalG,SAClCkG,EAAeD,GAIrB,OAAOC,K,0BAMb,SAAavE,GACIgC,SAASY,eAAe5C,GAC9BwE,SACTxC,SAASyC,YAAY,U,oBAGvB,WAAU,IAAD,OACP,OACE,qBAAK5F,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBACE6F,OAAQ,kBACN,EAAKC,WAAL,gDAFJ,2BAOA,gEACA,iZAQA,6CACe,IACb,mBAAGC,KAAK,2CAAR,yDAIF,+CACA,uBAAO/F,UAAU,UAAjB,SACE,kCACE,+BACE,6BACE,sCADOO,KAAKC,UAGd,6BACE,gIADOD,KAAKC,YAJPD,KAAKC,UAWd,+BACE,6BACE,0CADOD,KAAKC,UAGd,6BACE,oIADOD,KAAKC,YAJPD,KAAKC,UAWd,+BACE,6BACE,wCADOD,KAAKC,UAGd,6BACE,mMADOD,KAAKC,YAJPD,KAAKC,UAYd,+BACE,6BACE,6CADOD,KAAKC,UAGd,6BACE,uKADOD,KAAKC,YAJPD,KAAKC,UAYd,+BACE,6BACE,wCADOD,KAAKC,UAGd,6BACE,uMADOD,KAAKC,YAJPD,KAAKC,eAclB,4CACA,4OAMA,qDACA,+BACE,+BACE,0BACEwF,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRlC,MAAM,8CACN5D,GAAG,UAEL,wBACEH,QAAS,kBACP,EAAK6F,WAAL,gDAFJ,SAOE,mBAAG9F,UAAU,uBAGjB,+BACE,0BACEgG,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRlC,MAAM,kDACN5D,GAAG,UAEL,wBACEH,QAAS,kBACP,EAAK6F,WAAL,oDAFJ,SAOE,mBAAG9F,UAAU,uBAGjB,+BACE,0BACEgG,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRlC,MAAM,gDACN5D,GAAG,UAEL,wBACEH,QAAS,kBACP,EAAK6F,WAAL,kDAFJ,SAOE,mBAAG9F,UAAU,uBAGjB,+BACE,0BACEgG,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRlC,MAAM,qDACN5D,GAAG,UAEL,wBACEH,QAAS,kBACP,EAAK6F,WAAL,uDAFJ,SAOE,mBAAG9F,UAAU,uBAGjB,+BACE,0BACEgG,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRlC,MAAM,gDACN5D,GAAG,UAEL,wBACEH,QAAS,kBACP,EAAK6F,WAAL,kDAFJ,SAOE,mBAAG9F,UAAU,6BAKrB,0CACA,qBAAKA,UAAU,UAAf,SAC0B,OAAvBT,KAAKJ,MAAME,QACV,cAAC,EAAD,CACEA,QAASE,KAAKJ,MAAME,QACpBD,gBAAiBG,KAAKJ,MAAME,UAG9B,6EAGJ,mCACE,uBACA,8BACE,mBAAGW,UAAU,kBADf,WAC4C,IAC1C,mBAAG+F,KAAK,4CAAR,0DAIF,0CACY,IACV,oBAAGA,KAAK,uBAAR,qBACU,mBAAG/F,UAAU,uBAGzB,qD,GA1TMuE,aCQH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1D,SAASY,eAAe,SAM1BoC,M","file":"static/js/main.8ab3bffa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nclass DisplayResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originalResults: this.props.originalResults,\r\n      results: this.props.results,\r\n    };\r\n  }\r\n\r\n  /*1) Pushes the name of each property of the first results item into Array A\r\n    2) Array B now renders each item of Array A as headings */\r\n  makeHeadings() {\r\n    var result = this.state.results;\r\n    if (result.length) {\r\n      var headingsList = [];\r\n      var listHeadings = [];\r\n      for (var property in result[0]) {\r\n        headingsList.push(property);\r\n      }\r\n      headingsList.unshift(`#`);\r\n      listHeadings = headingsList.map((item) => (\r\n        <th className=\"results-tr\" key={Math.random()}>\r\n          <div className=\"sorting-buttons\">\r\n            <p>{item}</p>\r\n            <div className=\"sorting-buttons-column\">\r\n              <button onClick={() => this.sortBodies(item, 'increase')}>\r\n                <i className=\"fas fa-chevron-up\"></i>\r\n              </button>\r\n              <button onClick={() => this.sortBodies(item, 'decrease')}>\r\n                <i className=\"fas fa-chevron-down\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"small-search-form\">\r\n            <form>\r\n              <input type=\"text\" className=\"input-search\" id={item}></input>\r\n            </form>\r\n            <button onClick={() => this.search(`${item}`)}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          <div id={String(item) + 'err'}></div>\r\n        </th>\r\n      ));\r\n      listHeadings[0] = (\r\n        <th className=\"results-tr\" key={Math.random()}>\r\n          <p>#</p>\r\n        </th>\r\n      );\r\n      return <tr>{listHeadings}</tr>;\r\n    } else {\r\n      return (\r\n        <tr key={Math.random()}>\r\n          <td key={Math.random()}>Results not found</td>\r\n        </tr>\r\n      );\r\n    }\r\n  }\r\n\r\n  /*1) Pushes the name of each property of the first results item into Array A\r\n    2) Array B now renders each item of Array A as headings */\r\n  makeResults() {\r\n    var result = this.state.results;\r\n    var listResults = [];\r\n    if (result) {\r\n      for (var i = 0; i < result.length; i++) {\r\n        var resultsList = [];\r\n        resultsList.push(<td key={Math.random()}>{i + 1}</td>);\r\n        for (var property1 in result[i]) {\r\n          var myResult;\r\n          if (Array.isArray(result[i][property1])) {\r\n            var myResult1 = [];\r\n            for (var property2 in result[i][property1]) {\r\n              var el = JSON.stringify(result[i][property1][property2]);\r\n              myResult1.push(el);\r\n            }\r\n            myResult = myResult1\r\n              .join(`\\n`)\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '')\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll(',', '\\n')\r\n              .replaceAll('_', ' ');\r\n          } else if (\r\n            Array.isArray(result[i][property1]) === false &&\r\n            result[i][property1] !== null &&\r\n            result[i][property1] !== ''\r\n          ) {\r\n            var myResult3 = String(JSON.stringify(result[i][property1]));\r\n            myResult = myResult3\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '');\r\n          } else if (\r\n            result[i][property1] === null ||\r\n            result[i][property1] === 'undefined' ||\r\n            result[i][property1] === ''\r\n          ) {\r\n            myResult = '---';\r\n          }\r\n          var end = myResult.length;\r\n          var myResult2;\r\n          if (end > 40) {\r\n            var triggerWord = myResult.substr(0, 15) + '...';\r\n            myResult2 = (\r\n              <Collapsible className=\"collapsible\" trigger={triggerWord}>\r\n                ${myResult}\r\n              </Collapsible>\r\n            );\r\n          } else {\r\n            myResult2 = myResult;\r\n          }\r\n\r\n          resultsList.push(<td key={Math.random()}>{myResult2}</td>);\r\n        }\r\n        listResults.push(<tr key={Math.random()}>{resultsList}</tr>);\r\n      }\r\n      return <tbody className=\"results-tbody\">{listResults}</tbody>;\r\n    } else {\r\n      return (\r\n        <tbody>\r\n          <tr key={Math.random()}>\r\n            <td key={Math.random()}>Results not found</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    }\r\n  }\r\n\r\n  /*When the sorting button is clicked, the results array changes and the table rerenders */\r\n  sortBodies(myItem, mySortingOption) {\r\n    var option = myItem;\r\n    var sortingOption = mySortingOption; //increase or decrease\r\n    var bodies1 = this.state.results;\r\n    var bodies2 = bodies1;\r\n    var item1;\r\n    var item2;\r\n    for (var i = 0; i < bodies1.length; i++) {\r\n      var smallIndex = i;\r\n      for (var j = i + 1; j < bodies1.length; j++) {\r\n        if (bodies2[smallIndex][option] == null || bodies2[j][option] == null) {\r\n          item1 = '0';\r\n          item2 = '0';\r\n        } else if (\r\n          typeof bodies2[smallIndex][option] === 'string' &&\r\n          bodies2[smallIndex][option].length < 10\r\n        ) {\r\n          item1 = bodies2[smallIndex][option];\r\n          item2 = bodies2[j][option];\r\n        } else if (\r\n          Object.keys(bodies2[smallIndex][option]).length > 0 &&\r\n          Object.keys(bodies2[j][option]).length > 0\r\n        ) {\r\n          var keys1 = [];\r\n          var keys2 = [];\r\n          for (var prop1 in bodies2[smallIndex][option]) {\r\n            keys1.push(bodies2[smallIndex][option][prop1]);\r\n          }\r\n          for (var prop2 in bodies2[j][option]) {\r\n            keys2.push(bodies2[j][option][prop2]);\r\n          }\r\n          item1 = keys1.join();\r\n          item2 = keys2.join();\r\n        } else {\r\n          item1 = bodies2[smallIndex][option];\r\n          item2 = bodies2[j][option];\r\n        }\r\n\r\n        if (sortingOption === 'increase') {\r\n          if (item2 < item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n        if (sortingOption === 'decrease') {\r\n          if (item2 > item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n      }\r\n      var temp = bodies2[i];\r\n      bodies2[i] = bodies2[smallIndex];\r\n      bodies2[smallIndex] = temp;\r\n    }\r\n    this.setState({ results: bodies2 }, () => console.log(this.state.results));\r\n  }\r\n\r\n  /*Converts the results array to the downloadable text or csv file*/\r\n  convertToText(option) {\r\n    var result = this.state.results;\r\n    var textArr = [];\r\n    for (var property in result[0]) {\r\n      textArr.push(property);\r\n    }\r\n    for (var i = 0; i < result.length; i++) {\r\n      var textRow = [];\r\n      for (var property1 in result[i]) {\r\n        var myResult = [];\r\n        if (Array.isArray(result[i][property1])) {\r\n          var myResult1 = [];\r\n          for (var property2 in result[i][property1]) {\r\n            var el = JSON.stringify(result[i][property1][property2]);\r\n            myResult1.push(el);\r\n          }\r\n          myResult = myResult1\r\n            .join(`\\n`)\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '')\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll(',', '\\n')\r\n            .replaceAll('_', ' ');\r\n        } else if (\r\n          Array.isArray(result[i][property1]) === false &&\r\n          result[i][property1] !== null &&\r\n          result[i][property1] !== ''\r\n        ) {\r\n          var myResult3 = String(JSON.stringify(result[i][property1]));\r\n          myResult = myResult3\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '');\r\n        } else if (\r\n          result[i][property1] === null ||\r\n          result[i][property1] === 'undefined' ||\r\n          result[i][property1] === ''\r\n        ) {\r\n          myResult = '---';\r\n        }\r\n        textRow.push(myResult);\r\n      }\r\n      textArr.push(textRow.join(','));\r\n    }\r\n    var text = textArr.join('\\n');\r\n    var link = document.createElement('a');\r\n    if (option === 'csv') {\r\n      link.setAttribute(\r\n        'href',\r\n        'data:text/csv;charset=utf-8,' + encodeURI(text)\r\n      );\r\n      link.setAttribute('download', 'data_csv.csv');\r\n    } else {\r\n      link.setAttribute(\r\n        'href',\r\n        'data:text/plain;charset=utf-8,' + encodeURI(text)\r\n      );\r\n      link.setAttribute('download', 'data_text.txt');\r\n    }\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link); // Required for FF\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  /*Allows searching through items in each column*/\r\n  search(myProperty) {\r\n    var property = myProperty;\r\n    var query = document.getElementById(property).value;\r\n    var bodies1 = this.state.originalResults;\r\n    var searchResultsList = [];\r\n    for (var i = 0; i < bodies1.length; i++) {\r\n      if (bodies1[i][property]) {\r\n        var myResult = [];\r\n        if (Array.isArray(bodies1[i][property])) {\r\n          var myResult1 = [];\r\n          for (var property2 in bodies1[i][property]) {\r\n            var el = JSON.stringify(bodies1[i][property][property2]);\r\n            myResult1.push(el);\r\n          }\r\n          myResult = myResult1\r\n            .join(`\\n`)\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '')\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll(',', '\\n')\r\n            .replaceAll('_', ' ');\r\n        } else if (\r\n          Array.isArray(bodies1[i][property]) === false &&\r\n          bodies1[i][property] !== null &&\r\n          bodies1[i][property] !== ''\r\n        ) {\r\n          var myResult3 = String(JSON.stringify(bodies1[i][property]));\r\n          myResult = myResult3\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '');\r\n        } else if (\r\n          bodies1[i][property] === null ||\r\n          bodies1[i][property] === 'undefined' ||\r\n          bodies1[i][property] === ''\r\n        ) {\r\n          myResult = '---';\r\n        }\r\n        if (bodies1[i][property] === query || myResult.includes(query)) {\r\n          searchResultsList.push(bodies1[i]);\r\n        }\r\n      }\r\n      if (searchResultsList.length > 0) {\r\n        this.setState({ results: searchResultsList }, () =>\r\n          console.log(this.state.results)\r\n        );\r\n      } else {\r\n        document.getElementById(\r\n          `${property + 'err'}`\r\n        ).innerHTML = `<p className=\"search-error-msg\">No results found.</p>`;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"display-results\">\r\n        <div className=\"results-extra\">\r\n          <p>Download table as a file:</p>\r\n          <button\r\n            className=\"button-csv\"\r\n            onClick={() => this.convertToText('csv')}\r\n          >\r\n            <i className=\"fas fa-file-download\"></i> CSV (.csv){' '}\r\n          </button>\r\n          <button\r\n            className=\"button-text\"\r\n            onClick={() => this.convertToText('text')}\r\n          >\r\n            <i className=\"fas fa-file-download\"></i> Plain Text (.txt){' '}\r\n          </button>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"table\">\r\n            <thead className=\"table-heading\">{this.makeHeadings()}</thead>\r\n            {this.makeResults()}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DisplayResults;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport DisplayResults from './components/DisplayResults.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n    };\n  }\n\n  /**1) Gets url from a user input\n   * 2) Makes a fetch call with that link to get JSON response\n   * 3) Calls another function to find results in that response\n   * 4) Stores that value inside \"this.state.results\" */\n  async getResults(url) {\n    this.setState({ results: null }, () =>\n      console.log('null results :( ' + this.state.results)\n    );\n    await fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        var myResult = this.findResultsArray(result);\n        this.setState({ results: myResult }, () =>\n          console.log(this.state.results)\n        );\n      })\n      .catch((error) => {\n        console.log('Error: ' + error);\n        alert(\n          'No results found. Check the URL and make sure that response is in JSON format or try again later.'\n        );\n        this.setState({ results: null }, () =>\n          console.log('null results :( ' + this.state.results)\n        );\n      });\n  }\n\n  /**1) Inputs the JSON response returned from the \"fetch\" call\n   * 2) Finds the results array\n   * 3) Returns it back to the \"getResults\" function */\n  findResultsArray(myObject) {\n    var bigObject = myObject;\n    //Two scenarios for a JSON response returned:\n    //Scenario 1: response returned is already an array so we will use it\n    if (Array.isArray(bigObject) === true) {\n      return bigObject;\n    }\n    //Scenario 2: response returned is an object containing keys and values\n    else if (typeof bigObject === 'object') {\n      /* Now the response can either contain A) the results as keys and values of the object itself, or B) the results stored in an array of one of the values. \n      Assuming the result items are the the longest we can find the results the following way: \n    1) Count the number of properties the object has.\n    2) Count the number of the longest array items the object has.\n    3) Properties > array items, then the results are properties. If otherwise, the results is the longest array. */\n      var propCount = 0;\n      for (var property in bigObject) {\n        propCount++;\n      }\n      var biggestArrayLength = 0;\n      var biggestArray1 = [];\n      for (var property1 in bigObject) {\n        var thisArray1 = [];\n        if (Array.isArray(bigObject[property1]) === true) {\n          thisArray1 = bigObject[property1];\n          if (thisArray1.length > biggestArray1.length) {\n            biggestArray1 = thisArray1;\n          }\n        }\n      }\n      biggestArrayLength = biggestArray1.length;\n      if (propCount > biggestArrayLength) {\n        var myArray1 = [];\n        myArray1[0] = bigObject;\n        return myArray1;\n      } else {\n        var thisArray = [];\n        var biggestArray = [];\n        //if the thing is an object with keys convert it to array\n        for (var property2 in bigObject) {\n          if (Array.isArray(bigObject[property2]) === true) {\n            thisArray = bigObject[property2];\n            if (thisArray.length > biggestArray.length) {\n              biggestArray = thisArray;\n            }\n          }\n        }\n        return biggestArray;\n      }\n    }\n  }\n\n  /*When a button is pressed next to one of the links, the text is copied to clipboard so then the user can paste it in the text input*/\n  copyLinkText(el) {\n    var textArea = document.getElementById(el);\n    textArea.select();\n    document.execCommand('copy');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"frame\">\n          <div className=\"description\">\n            <h1\n              onLoad={() =>\n                this.getResults(`https://astronomy-api-123.herokuapp.com/all`)\n              }\n            >\n              Astronomy API\n            </h1>\n            <h4>Solar System Planets and Moons</h4>\n            <p>\n              Astronomy API includes data of planets and moons inside the Solar\n              System. It also includes a few of the nearby stars and exoplanets\n              (planets outside of the Solar System). The data consists primarily\n              of physical characteristics such as mass and radius and motion\n              characteristics such as orbital speed. The API call returns\n              results in JSON format of objects in an array.\n            </p>\n            <p>\n              API website:{' '}\n              <a href=\"https://astronomy-api-123.herokuapp.com/\">\n                https://astronomy-api-123.herokuapp.com/\n              </a>\n            </p>\n            <h4>API Endpoints</h4>\n            <table className=\"table-1\">\n              <tbody>\n                <tr key={Math.random()}>\n                  <td key={Math.random()}>\n                    <p>/all</p>\n                  </td>\n                  <td key={Math.random()}>\n                    <p>\n                      All objects including Solar System planets and moons,\n                      exoplanets, nearby stars, and their data\n                    </p>\n                  </td>\n                </tr>\n                <tr key={Math.random()}>\n                  <td key={Math.random()}>\n                    <p>/planets</p>\n                  </td>\n                  <td key={Math.random()}>\n                    <p>\n                      Planets in the Solar System and their data including mass,\n                      radius, temperature, and semimajor axis\n                    </p>\n                  </td>\n                </tr>\n                <tr key={Math.random()}>\n                  <td key={Math.random()}>\n                    <p>/moons</p>\n                  </td>\n                  <td key={Math.random()}>\n                    <p>\n                      Moons in the Solar System, the planets that they orbit,\n                      and other data including semi-major axis, eccentricity,\n                      orbital period, radius, and average orbital speed\n                    </p>\n                  </td>\n                </tr>\n                <tr key={Math.random()}>\n                  <td key={Math.random()}>\n                    <p>/exoplanets</p>\n                  </td>\n                  <td key={Math.random()}>\n                    <p>\n                      Closest planets outside of the Solar System, their host\n                      star, and other data including mass, radius, temperature,\n                      and semi-major axis\n                    </p>\n                  </td>\n                </tr>\n                <tr key={Math.random()}>\n                  <td key={Math.random()}>\n                    <p>/stars</p>\n                  </td>\n                  <td key={Math.random()}>\n                    <p>\n                      Closest stars outside of the Solar System, constellation\n                      they are in, and other data including ascension and\n                      declination, apparent magnitude, spectral type, and mass\n                    </p>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <h4>Data Table</h4>\n            <p>\n              Try the links below to view the API data in a table. Users can\n              search and sort the data table as well as download the table in\n              plain text or CSV format. Please wait a few seconds for the\n              results to load.\n            </p>\n            <h4>Try these requests:</h4>\n            <ol>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://astronomy-api-123.herokuapp.com/all\"\n                  id=\"link1\"\n                ></textarea>\n                <button\n                  onClick={() =>\n                    this.getResults(\n                      `https://astronomy-api-123.herokuapp.com/all`\n                    )\n                  }\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://astronomy-api-123.herokuapp.com/planets\"\n                  id=\"link2\"\n                ></textarea>\n                <button\n                  onClick={() =>\n                    this.getResults(\n                      `https://astronomy-api-123.herokuapp.com/planets`\n                    )\n                  }\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://astronomy-api-123.herokuapp.com/moons\"\n                  id=\"link3\"\n                ></textarea>\n                <button\n                  onClick={() =>\n                    this.getResults(\n                      `https://astronomy-api-123.herokuapp.com/moons`\n                    )\n                  }\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://astronomy-api-123.herokuapp.com/exoplanets\"\n                  id=\"link4\"\n                ></textarea>\n                <button\n                  onClick={() =>\n                    this.getResults(\n                      `https://astronomy-api-123.herokuapp.com/exoplanets`\n                    )\n                  }\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://astronomy-api-123.herokuapp.com/stars\"\n                  id=\"link5\"\n                ></textarea>\n                <button\n                  onClick={() =>\n                    this.getResults(\n                      `https://astronomy-api-123.herokuapp.com/stars`\n                    )\n                  }\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </li>\n            </ol>\n          </div>\n          <h4>Results:</h4>\n          <div className=\"results\">\n            {this.state.results !== null ? (\n              <DisplayResults\n                results={this.state.results}\n                originalResults={this.state.results}\n              ></DisplayResults>\n            ) : (\n              <p>No results. Try one of the requests above.</p>\n            )}\n          </div>\n          <footer>\n            <hr></hr>\n            <p>\n              <i className=\"fab fa-github\"></i> GitHub:{' '}\n              <a href=\"https://github.com/ari-abr/astro-api-app1\">\n                https://github.com/ari-abr/astro-api-app1\n              </a>\n            </p>\n            <p>\n              Made with{' '}\n              <a href=\"https://reactjs.org/\">\n                React.js<i className=\"fab fa-react\"></i>\n              </a>\n            </p>\n            <p>By A. A.</p>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n/*Main Algorithm:\n1) Get the results object/array\n2) Find the array or convert it to an array\n3) Pass it to the DisplayResults.js\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}